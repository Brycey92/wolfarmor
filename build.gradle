buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "http://repo.spongepowered.org/maven"}
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6+"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

sourceSets.api {
    java {
        srcDirs 'api/'
    }
}
sourceSets.main {
    java {
        srcDirs 'src/main/java'
        srcDirs 'api/'
    }
}
sourceSets.test {
    java {
        srcDirs 'tests/'
    }
}

def modConfig
def apiConfig

file "./config.json" withReader {
    modConfig = new groovy.json.JsonSlurper().parseText(it.text)
}

file "./api/config.json" withReader {
    apiConfig = new groovy.json.JsonSlurper().parseText(it.text)
}


def combinedMinorVersion = (modConfig.version.minor | (apiConfig.version.minor<<8))

def shortVersion = "${modConfig.version.major}.${apiConfig.version.major}.${combinedMinorVersion}.${modConfig.version.patch}"
version = "${modConfig.version.minecraft}-${shortVersion}"

println "Current version is ${version}"
group= "dev.satyrn.wolfarmor"
archivesBaseName = "wolfarmor"

//noinspection GroovyUnusedAssignment
sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

build {
}

artifacts {
    archives shadowJar
}

shadowJar {
    mainSpec.sourcePaths.clear()
    dependsOn reobfJar
    dependencies {
        include dependency('org.spongepowered:mixin')
    }

    manifest.attributes(
    'FMLCorePluginContainsFMLMod': true
    )

    exclude 'dummyThing'
    exclude 'LICENSES*'

    afterEvaluate {
        from zipTree(reobfJar.jar)
    }
}

minecraft {
    version = "${modConfig.version.minecraft}-${modConfig.forge.version}"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = modConfig.mcp.version
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replace '@NAME@', modConfig.name
    replace '@MODID@', modConfig.modid
    replace '@VERSION@', shortVersion
    replace '@MCVERSION@', modConfig.version.minecraft
}

repositories {
    maven { url = 'http://repo.spongepowered.org/maven' }
}

dependencies {
    compile("org.spongepowered:mixin:${modConfig.sponge.version}"){
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':shortVersion, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

	// copy LICENSE
    from('/') {
        include 'LICENSE'
        include 'CREDITS'
    }
}

mixin {
    add sourceSets.main, "mixins.wolfarmor.refmap.json"
}

jar {
    manifest.attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': "${System.properties['java.vm.version']} (${System.properties['java.vm.vendor']})",
            'Implementation-Title': project.name,
            'Implementation-Version': version,
            'Implementation-Vendor': 'https://satyrn.dev',
            'FMLCorePlugin': "${project.group}.coremod.WolfArmorCore",
            'ForceLoadAsMod': true,
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,
            'MixinConfigs': 'mixins.wolfarmor.core.json',
            'FMLAT': 'wolfarmor_at.cfg'
    )
}

task updatePatchNumber() {
    dependsOn build
    gradle.taskGraph.whenReady {taskGraph ->
        if(taskGraph.hasTask(compileJava) &&
                taskGraph.hasTask(assemble) &&
                taskGraph.hasTask(build)) {
            modConfig.version.patch += 1
            def configFile = new File('./config.json')
            configFile.delete()
            configFile.write(new groovy.json.JsonBuilder(modConfig).toPrettyString())
            println "Patch number updated to ${modConfig.version.patch}"
        }
    }
}

task updateModVersion(type:Copy) {
    from('src/main/java') {
        exclude 'mcmod.info'
    }
    into 'build/sources/main/java'
    expand 'version':shortVersion, 'mcversion':project.minecraft.version
}


compileJava.dependsOn updateModVersion
updatePatchNumber.shouldRunAfter build
